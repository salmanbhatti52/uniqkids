{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nexport interface StripeCardTokenParams {\n    /**\n     * Card number\n     */\n    number: string;\n    /**\n     * Expiry month\n     */\n    expMonth: number;\n    /**\n     * Expiry year\n     */\n    expYear: number;\n    /**\n     * CVC / CVV\n     */\n    cvc?: string;\n    /**\n     * Cardholder name\n     */\n    name?: string;\n    /**\n     * Address line 1\n     */\n    address_line1?: string;\n    /**\n     * Address line 2\n     */\n    address_line2?: string;\n    /**\n     * City\n     */\n    address_city?: string;\n    /**\n     * State / Province\n     */\n    address_state?: string;\n    /**\n     * Country\n     */\n    address_country?: string;\n    /**\n     * Postal code / ZIP Code\n     */\n    postalCode?: string;\n    /**\n     * 3-letter ISO code for currency\n     */\n    currency?: string;\n}\nexport interface StripeBankAccountParams {\n    /**\n     * Routing number.\n     */\n    routing_number: string;\n    /**\n     * Account number.\n     */\n    account_number: string;\n    /**\n     * Currency code. Example: `USD`.\n     */\n    currency: string;\n    /**\n     * Country code. Example: `US`.\n     */\n    country: string;\n    /**\n     * Account holder name.\n     */\n    account_holder_name?: string;\n    /**\n     * Account holder type. This can be `individual` or `company`.\n     */\n    account_holder_type?: string;\n}\nexport interface StripeCardTokenRes {\n    /**\n     * Card Object.\n     */\n    card: {\n        brand: string;\n        exp_month: number;\n        exp_year: number;\n        funding: string;\n        last4: string;\n    };\n    /**\n     * Token Request Date Time.\n     */\n    created: string;\n    /**\n     * Card Token.\n     */\n    id: string;\n    /**\n     * Source Type (card or account).\n     */\n    type: string;\n}\n/**\n * @name Stripe\n * @description\n * A plugin that allows you to use Stripe's Native SDKs for Android and iOS.\n *\n * @usage\n * ```typescript\n * import { Stripe } from '@ionic-native/stripe/ngx';\n *\n * constructor(private stripe: Stripe) { }\n *\n * ...\n *\n * this.stripe.setPublishableKey('my_publishable_key');\n *\n * let card = {\n *  number: '4242424242424242',\n *  expMonth: 12,\n *  expYear: 2020,\n *  cvc: '220'\n * }\n *\n * this.stripe.createCardToken(card)\n *    .then(token => console.log(token.id))\n *    .catch(error => console.error(error));\n *\n * ```\n *\n * @interfaces\n * StripeCardTokenParams\n */\nexport declare class Stripe extends IonicNativePlugin {\n    /**\n     * Set publishable key\n     * @param publishableKey {string} Publishable key\n     * @return {Promise<void>}\n     */\n    setPublishableKey(publishableKey: string): Promise<void>;\n    /**\n     * Create Credit Card Token\n     * @param params {StripeCardTokenParams} Credit card information\n     * @return {Promise<StripeCardTokenRes>} returns a promise that resolves with the token object, or rejects with an error\n     */\n    createCardToken(params: StripeCardTokenParams): Promise<StripeCardTokenRes>;\n    /**\n     * Create a bank account token\n     * @param params {StripeBankAccountParams} Bank account information\n     * @return {Promise<string>} returns a promise that resolves with the token, or rejects with an error\n     */\n    createBankAccountToken(params: StripeBankAccountParams): Promise<string>;\n    /**\n     * Validates a credit card number\n     * @param cardNumber {string} Credit card number\n     * @return {Promise<any>} returns a promise that resolves if the number is valid, and rejects if it's invalid\n     */\n    validateCardNumber(cardNumber: string): Promise<any>;\n    /**\n     * Validates a CVC number\n     * @param cvc {string} CVC number\n     * @return {Promise<any>} returns a promise that resolves if the number is valid, and rejects if it's invalid\n     */\n    validateCVC(cvc: string): Promise<any>;\n    /**\n     * Validates an expiry date\n     * @param expMonth {string} expiry month (0 - 11)\n     * @param expYear {string} expiry year\n     * @return {Promise<any>} returns a promise that resolves if the date is valid, and rejects if it's invalid\n     */\n    validateExpiryDate(expMonth: string, expYear: string): Promise<any>;\n    /**\n     * Get a card type from card number\n     * @param cardNumber {string} Card number\n     * @return {Promise<string>} returns a promise that resolves with the credit card type\n     */\n    getCardType(cardNumber: string): Promise<string>;\n}\n"]}